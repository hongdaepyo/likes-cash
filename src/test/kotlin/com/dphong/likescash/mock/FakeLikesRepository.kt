package com.dphong.likescash.mock

import com.dphong.likescash.domain.posts.Likes
import com.dphong.likescash.repository.posts.LikesRepository

class FakeLikesRepository : LikesRepository, AbstractFakeRepository<Likes>() {
    override fun save(likes: Likes): Likes {
        if (likes.id == null || likes.id == 0L) {
            val newLikes = Likes(
                autoGeneratedId.incrementAndGet(),
                likes.memberId,
                likes.postId
            )
            data.add(newLikes)
            return newLikes
        } else {
            data.removeIf { it.id == likes.id }
            data.add(likes)
            return likes
        }
    }

    override fun findByMemberIdAndPostId(memberId: Long, postId: Long): Likes? {
        return data.firstOrNull { it.memberId == memberId && it.postId == postId }
    }

    override fun delete(likes: Likes) {
        data.removeIf { it.id == likes.id }
    }
}
