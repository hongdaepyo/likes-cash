package com.dphong.likescash.mock

import com.dphong.likescash.domain.Member
import com.dphong.likescash.domain.MemberRole
import com.dphong.likescash.repository.member.MemberRepository

class FakeMemberRepository : MemberRepository, AbstractFakeRepository<Member>() {

    override fun findByUsernameOrNull(username: String): Member? {
        return data.firstOrNull { it.username == username }
    }

    override fun findByIdAndRole(id: Long, role: MemberRole): Member? {
        return data.firstOrNull { it.id == id && it.role == role }
    }

    override fun save(member: Member): Member =
        if (member.id == null || member.id == 0L) {
            val newMember = Member(
                autoGeneratedId.incrementAndGet(),
                member.username,
                member.password,
                member.name,
                member.role
            )

            data.add(newMember)
            newMember
        } else {
            data.removeIf { it.id == member.id }
            data.add(member)
            member
        }
}
