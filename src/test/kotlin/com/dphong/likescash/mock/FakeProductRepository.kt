package com.dphong.likescash.mock

import com.dphong.likescash.domain.product.Product
import com.dphong.likescash.repository.product.ProductRepository

class FakeProductRepository : ProductRepository, AbstractFakeRepository<Product>() {
    override fun save(product: Product): Product =
        if (product.id == null || product.id == 0L) {
            val newProduct = Product(
                autoGeneratedId.incrementAndGet(),
                product.name,
                product.seller,
            ).apply {
                isVisible = product.isVisible
            }
            data.add(newProduct)
            newProduct
        } else {
            data.removeIf { it.id == product.id }
            data.add(product)
            product
        }

    override fun findAll(): List<Product> {
        return data.filter { it.isVisible }
    }

    override fun findByIdOrNull(productId: Long): Product? {
        return data.find { it.id == productId }
    }

}
